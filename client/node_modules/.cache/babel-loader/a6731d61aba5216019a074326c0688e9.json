{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar WizardForm = function (_React$Component) {\n  _inherits(WizardForm, _React$Component);\n\n  function WizardForm(props) {\n    _classCallCheck(this, WizardForm);\n\n    var _this = _possibleConstructorReturn(this, (WizardForm.__proto__ || Object.getPrototypeOf(WizardForm)).call(this, props));\n\n    _this.nextStep = _this.nextStep.bind(_this);\n    _this.previousStep = _this.previousStep.bind(_this);\n    _this.navigate = _this.navigate.bind(_this);\n    _this.onHeaderClick = _this.onHeaderClick.bind(_this);\n    _this.state = {\n      step: props.initialStep ? parseInt(props.initialStep) : 0,\n      data: \"\",\n      headers: props.headers,\n      elements: props.children,\n      submitElementClass: props.submitElementClass,\n      nextElementClass: props.nextElementClass\n    };\n    var params = {\n      nextStep: _this.nextStep,\n      data: _this.state.data,\n      currentStep: _this.state.step,\n      previousStep: _this.previousStep,\n      navigate: _this.navigate\n    };\n    var AllComponents = [];\n\n    _this.state.elements.map(function (obj, i) {\n      params.key = i;\n      AllComponents.push(_react2.default.cloneElement(obj, params));\n    });\n\n    _this.state.elements = AllComponents;\n    return _this;\n  }\n\n  _createClass(WizardForm, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.initAfterMount) {\n        this.props.initAfterMount();\n      }\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      if (this.props.initBeforeMount) {\n        this.props.initBeforeMount();\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.initialStep >= 0) {\n        if (nextProps.inOrder) {\n          if (this.state.step > nextProps.initialStep) {\n            this.navigate(nextProps.initialStep, this.state.data);\n          }\n        } else {\n          this.navigate(nextProps.initialStep, this.state.data);\n        }\n      }\n\n      var params = {\n        nextStep: this.nextStep,\n        data: this.state.data,\n        currentStep: this.state.step,\n        previousStep: this.previousStep,\n        navigate: this.navigate\n      };\n      var AllComponents = [];\n      nextProps.children.map(function (obj, i) {\n        params.key = i;\n        AllComponents.push(_react2.default.cloneElement(obj, params));\n      });\n      this.setState({\n        elements: AllComponents,\n        submitElementClass: nextProps.submitElementClass,\n        nextElementClass: nextProps.nextElementClass\n      });\n    }\n  }, {\n    key: 'navigate',\n    value: function navigate(step, data) {\n      var _this2 = this;\n\n      if (function (step) {\n        return 0 && step < _this2.state.headers.length && step != _this2.state.step;\n      }) {\n        this.setState({\n          step: step,\n          data: data\n        });\n\n        if (this.props.onStepChanged) {\n          this.props.onStepChanged(step);\n        }\n      }\n    }\n  }, {\n    key: 'onHeaderClick',\n    value: function onHeaderClick(e) {\n      var forms = this.state.elements;\n\n      for (var i = 0; i < forms.length; i++) {\n        if (forms[i].type.name == e.currentTarget.getAttribute('form')) {\n          forms[this.state.step].props.navigate(i);\n        }\n      }\n    }\n  }, {\n    key: 'nextStep',\n    value: function nextStep(data) {\n      if (this.state.elements.length - this.state.step > 1) {\n        var params = {\n          nextStep: this.nextStep,\n          data: data,\n          currentStep: this.state.step + 1,\n          previousStep: this.previousStep,\n          navigate: this.navigate\n        };\n        var newElements = [];\n        this.state.elements.map(function (obj, i) {\n          params.key = i;\n          newElements.push(_react2.default.cloneElement(obj, params));\n        });\n\n        if (this.props.onStepChanged) {\n          this.props.onStepChanged(this.state.step + 1);\n        }\n\n        this.setState({\n          step: this.state.step + 1,\n          data: data,\n          elements: newElements\n        });\n      }\n    }\n  }, {\n    key: 'previousStep',\n    value: function previousStep(data) {\n      if (this.state.step > 0) {\n        var params = {\n          nextStep: this.nextStep,\n          data: data,\n          currentStep: this.state.step - 1,\n          previousStep: this.previousStep,\n          navigate: this.navigate\n        };\n        var newElements = [];\n        this.state.elements.map(function (obj, i) {\n          params.key = i;\n          newElements.push(_react2.default.cloneElement(obj, params));\n        });\n        this.setState({\n          step: this.state.step - 1,\n          data: data,\n          elements: newElements\n        });\n\n        if (this.props.onStepChanged) {\n          this.props.onStepChanged(this.state.step - 1);\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var AllHeaders = [];\n      var headersParam = {\n        onClick: this.onHeaderClick\n      };\n\n      if (this.props.headers) {\n        this.props.headers.map(function (obj, i) {\n          headersParam.key = i;\n          AllHeaders.push(_react2.default.cloneElement(obj, headersParam));\n        });\n      }\n\n      return _react2.default.createElement('div', null, AllHeaders.length != 0 && _react2.default.createElement('ul', {\n        className: this.props.headerClass,\n        style: {\n          display: 'inline-flex'\n        }\n      }, AllHeaders), this.state.elements[this.state.step]);\n    }\n  }]);\n\n  return WizardForm;\n}(_react2.default.Component);\n\nexports.default = WizardForm;","map":null,"metadata":{},"sourceType":"script"}